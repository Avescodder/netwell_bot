import requests
import csv
from io import StringIO
from db import db, VendorDirection

SHEET_ID = "1dZVhfNqjS9NalZrjd3svUnz2yNngWd2QVYbuRUbQ12U"


DIRECTION_TABS = {
    "–°–•–î": "0",
    "–°–µ—Ä–≤–µ—Ä–∞": "0",
    "–ò–ë": "1402009523",
    "–ò–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞": "522772291",
    "–°–µ—Ç–∏": "832184783",
    "–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏": "228991952",
}

def parse_direction_tab(direction_name, gid):
    """–ü–∞—Ä—Å–∏—Ç –≤–∫–ª–∞–¥–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    csv_url = f"https://docs.google.com/spreadsheets/d/{SHEET_ID}/export?format=csv&gid={gid}"
    
    try:
        response = requests.get(csv_url)
        response.raise_for_status()
        
        content = response.content.decode('utf-8-sig')
        data = StringIO(content)
        lines = list(csv.reader(data))
        
        if len(lines) < 2:
            return []
        
        headers = lines[0]
        data_rows = lines[1:]
        
        vendors = []
        for row in data_rows:
            if len(row) < 2:  
                continue
            
            if len(row) < len(headers):
                row.extend([''] * (len(headers) - len(row)))
            
            vendor_name = row[0].strip()
            if not vendor_name:
                continue
            
            vendor_data = {
                'direction': direction_name,
                'vendor_name': vendor_name,
                'description': row[1].strip() if len(row) > 1 else None,
                'origin': row[2].strip() if len(row) > 2 else None,
                'categories': row[3].strip() if len(row) > 3 else None,
                'key_products': row[4].strip() if len(row) > 4 else None,
                'advantages': row[5].strip() if len(row) > 5 else None,
                'registries': row[6].strip() if len(row) > 6 else None,
            }
            
            vendors.append(vendor_data)
        
        return vendors
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ '{direction_name}': {e}")
        return []

def import_vendor_directions():
    print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ Google Sheets...\n")
    
    
    total_added = 0
    total_updated = 0
    
    for direction, gid in DIRECTION_TABS.items():
        print(f"üìÇ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {direction}")
        vendors = parse_direction_tab(direction, gid)
        
        if not vendors:
            print(f"  ‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n")
            continue
        
        print(f"  –ù–∞–π–¥–µ–Ω–æ: {len(vendors)}")
        
        added = 0
        updated = 0
        
        for vendor_data in vendors:
            try:
                existing = db.session.query(VendorDirection).filter_by(
                    direction=direction,
                    vendor_name=vendor_data['vendor_name']
                ).first()
                
                db.add_vendor_direction(**vendor_data)
                
                if existing:
                    updated += 1
                else:
                    added += 1
                    
            except Exception as e:
                print(f"  ‚ùå {vendor_data['vendor_name']}: {e}")
                db.session.rollback()
        
        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {added}, üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated}\n")
        
        total_added += added
        total_updated += updated
    
    print(f"{'='*50}")
    print(f"üéâ –ò–¢–û–ì–û:")
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {total_added}")
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")
    print(f"{'='*50}")

if __name__ == '__main__':
    import_vendor_directions()