name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy Bot
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            
            # Бэкап базы данных (если контейнер запущен)
            if [ "$(docker ps -q -f name=telegram_bot)" ]; then
              docker exec telegram_bot cp /app/data/*.db /app/data/backup_$(date +%Y%m%d_%H%M%S).db 2>/dev/null || echo "Backup skipped"
            fi
            
            # Остановка
            docker-compose down
            
            # Обновление кода
            git pull origin main
            
            # Проверка наличия .env
            if [ ! -f .env ]; then
              echo "❌ ERROR: .env file not found!"
              exit 1
            fi
            
            # Запуск
            docker-compose up -d --build
            
            # Ожидание запуска
            sleep 15
            
            # Проверка
            docker-compose ps
            docker-compose logs --tail=30 bot
            
    #   - name: Send Telegram notification
    #     if: always()
    #     uses: appleboy/telegram-action@master
    #     with:
    #       to: ${{ secrets.TELEGRAM_CHAT_ID }}
    #       token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    #       message: |
    #         ${{ job.status == 'success' && '✅' || '❌' }} Деплой ${{ job.status == 'success' && 'успешен' || 'провален' }}!
            
    #         Репозиторий: ${{ github.repository }}
    #         Коммит: ${{ github.sha }}
    #         Автор: ${{ github.actor }}
    #         Ветка: ${{ github.ref_name }}