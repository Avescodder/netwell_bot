"""
–°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ Netwell
"""
import os
import sys

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    env_content = """# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ Netwell

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (—É–∑–Ω–∞—Ç—å —É @userinfobot)
ADMIN_IDS=123456789
"""
    
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env")

def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫"""
    directories = ['files']
    
    for directory in directories:
        if not os.path.exists(directory):
            os.makedirs(directory)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {directory}")

def create_sample_files():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤"""
    files_info = {
        'files/product_portfolio.pdf': '–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Å—é–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å',
        'files/guideline.pdf': '–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Å—é–¥–∞ –≥–∞–π–¥–ª–∞–π–Ω –∫–æ–º–ø–∞–Ω–∏–∏',
        'files/marketing_presentation.pdf': '–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Å—é–¥–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é'
    }
    
    for file_path, description in files_info.items():
        if not os.path.exists(file_path):
            with open(file_path.replace('.pdf', '.txt'), 'w', encoding='utf-8') as f:
                f.write(f"# {description}\n\n–ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π PDF.")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω placeholder: {file_path.replace('.pdf', '.txt')}")

def setup_database():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from db import db
        from sample_vendors import add_sample_vendors
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤–µ–Ω–¥–æ—Ä–æ–≤
        answer = input("–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≤–µ–Ω–¥–æ—Ä–æ–≤? (y/n): ")
        if answer.lower() in ['y', 'yes', '–¥–∞']:
            add_sample_vendors()
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ Netwell\n")
    
    if not os.path.exists('.env'):
        create_env_file()
    else:
        print("‚ÑπÔ∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    create_directories()
    
    create_sample_files()
    
    setup_database()
    
    print("\n" + "="*50)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
    print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env:")
    print("   - –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN_HERE –Ω–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather")
    print("   - –ó–∞–º–µ–Ω–∏—Ç–µ 123456789 –Ω–∞ –≤–∞—à Telegram ID (—É–∑–Ω–∞—Ç—å —É @userinfobot)")
    print("2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ PDF —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É files/")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python bot.py")
    print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python test_bot.py")

if __name__ == "__main__":
    main()